<Window x:Class="VideoScreenSaver.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:local="clr-namespace:VideoScreenSaver"
        mc:Ignorable="d"
        Title="Settings" Height="400" Width="500" MinHeight="300" MinWidth="300">
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="8,8,8,8">
            <CheckBox IsChecked="{Binding IsMuted, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Content="Mute sound" />
            <CheckBox IsChecked="{Binding IsSuffleTurnedOn, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Content="Suffle tracks" />
            <CheckBox IsChecked="{Binding IsShowMediaOnAllScreen, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Content="Display video on all screen(s)" />
            <Label Content="Audio Volume" />
            <Slider Value="{Binding Volume, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Maximum="100" LargeChange="10" SmallChange="1" TickPlacement="BottomRight" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="0%" HorizontalAlignment="Left" />
                <Label Grid.Column="1" Content="50%" HorizontalAlignment="Center" />
                <Label Grid.Column="2" Content="100%" HorizontalAlignment="Right" />
            </Grid>
        </StackPanel>

        <Grid Grid.Row="1" Margin="8,8,8,8">
            <Grid.Resources>
                <SolidColorBrush x:Key="ListBorder" Color="#828790"/>

                <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <DockPanel Margin="{TemplateBinding Padding}">
                                        <ScrollViewer DockPanel.Dock="Top" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                            <!--GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                    Margin="0,0,0,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" /-->
                                            <Label Background="#ffcc00" Content="Names" Visibility="Collapsed" />
                                        </ScrollViewer>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                            ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                                            KeyboardNavigation.DirectionalNavigation="Local" 
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </DockPanel>
                                    <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" Grid.Row="1" 
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                           ViewportSize="{TemplateBinding ViewportWidth}"/>
                                    <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" 
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                           ViewportSize="{TemplateBinding ViewportHeight}"/>
                                    <DockPanel Background="{Binding Background, ElementName=PART_VerticalScrollBar}" Grid.Column="1" LastChildFill="false" Grid.Row="1">
                                        <Rectangle DockPanel.Dock="Left" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1"/>
                                        <Rectangle DockPanel.Dock="Top" Fill="White" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                    </DockPanel>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
                    <!-- {DynamicResource {x:Static SystemColors.WindowBrushKey}} -->
                    <Setter Property="Background" Value="#ffffff"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="#000000"/>
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListView}">
                                <Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                                                    Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                                                    RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
                                    <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" HorizontalAlignment="Stretch" />
                                    </ScrollViewer>
                                </Microsoft_Windows_Themes:ListBoxChrome>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsGrouping" Value="true">
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ListViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle RadiusY="2" RadiusX="2" Stroke="#8E6EA6F5" StrokeThickness="1"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="ListItemHoverFill" Color="#ffffff" />
                <SolidColorBrush x:Key="ListItemSelectedFill" Color="#dce6ff" />
                <SolidColorBrush x:Key="ListItemSelectedInactiveFill" Color="#dce6ff" />
                <SolidColorBrush x:Key="ListItemSelectedHoverFill" Color="#dce6ff" />

            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <ListView x:Name="lvItems" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,0,0,0" Cursor="Hand"
                      ItemsSource="{Binding Medias, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Padding="0" 
                      SelectionChanged="lvItems_SelectionChanged"
                      SelectionMode="Multiple" Style="{DynamicResource ListViewStyle}">

                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
                        <Setter Property="Background" Value="#ffffff"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="5,2,5,2"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" SnapsToDevicePixels="true">
                                        <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="1">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="11"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Rectangle x:Name="UpperHighlight" Grid.ColumnSpan="2" Fill="#75FFFFFF" Visibility="Collapsed" Height="0"/>
                                                <Label x:Name="InnerLabel" Grid.RowSpan="2" Grid.Column="1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding Name}" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ListItemHoverFill}"/>
                                            <Setter Property="BorderBrush" Value="#FFCCF0FF"/>
                                            <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" Value="{StaticResource ListItemSelectedFill}"/>
                                            <Setter Property="Foreground" TargetName="InnerLabel" Value="Black" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}"/>
                                            <Setter Property="BorderBrush" Value="#FFCFCFCF"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsMouseOver" Value="true"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}"/>
                                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                                            <Setter Property="Foreground" TargetName="InnerLabel" Value="Gray" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="false"/>
                                                <Condition Property="IsMouseOver" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{StaticResource ListItemHoverFill}"/>
                                            <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                                            <Setter Property="Foreground" TargetName="InnerLabel" Value="Black" />
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>

                <ListView.View>
                    <GridView>
                        <!--GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Height" Value="25" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#ffcc00" />
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle-->
                        <!--GridViewColumn Header="Names" Width="Auto" /-->
                    </GridView>
                </ListView.View>
            </ListView>

            <Button Grid.Row="0" Grid.Column="1" Content="Add" Width="60" Height="20" Margin="8,0,0,0" Command="{Binding AddCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />
            <Button Grid.Row="1" Grid.Column="1" Content="Remove" Width="60" Height="20" Margin="8,8,0,0" VerticalAlignment="Top" Command="{Binding RemoveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" />

        </Grid>

        <StackPanel Grid.Row="2" Margin="8,8,8,8" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="Save" Width="100" Margin="0,0,4,0" IsDefault="True" Click="SaveButton_Click" />
            <Button Content="Cancel" Width="100" Margin="4,0,0,0" Click="CancelButton_Click" />
        </StackPanel>

    </Grid>
    
</Window>
